Goal: 
	Create a spades card game simulator. Start with small scope, with only being able
	to play in the terminal. Hopefully expand to a webapp that can handle multiple players.
	
Components:
	1. Card
		- int value
			2 -> 2
			.
			.
			.
			10 -> 10
			J -> 11
			Q -> 12
			K -> 13
			A -> 14
			2 (if suite is spades) -> 15
			j -> 16 (only 1 in deck)
			J -> 17 (only 1 in deck)
			
		- enum Suite (clubs, hearts, diamonds, spades)
			clubs -> 13 cards
			hearts -> 12 cards (remove 2 of hearts)
			diamonds -> 12 cards (remove 2 of diamonds)
			spades -> 15 cards
			
	2. Deck 
		- List<Cards> 52 total
		- Load() -> Initially load the 52 Cards into the deck.
		- Shuffle() -> Randomize List of cards.
		- Deal() -> 4 total players receive 13 cards from the deck. A deal populates
		the players hand.
		
	3. Player
		- List<cards> Hand
		- int score
			Individual score of the player
		
	4. Team 
		- Pair<Player, Player> 
		- int Score
			Max score is 13 because there is 13 total turns
			
	5. Turn
		- List<Cards> 4 total
		- enum prioritySuite -> The suite of the first card inserted into the turn.
		- Player winner -> Will also be the first to go on the next turn.
		- int count
			Max is 13
		- determineWinner() -> determine the winning player based on the four cards. 
		- increment the Team score of the winning player. 
		- Going to require a priority system to determine the winner of each turn.
		
		
	Diamonds -> 3,4,5,6,7,8,9,10,J,Q,K,A -> 3,4,5,6,7,8,9,10,11,12,13,14
	Hearts -> 3,4,5,6,7,8,9,10,J,Q,K,A -> 3,4,5,6,7,8,9,10,11,12,13,14
	Clubs -> 2,3,4,5,6,7,8,9,10,J,Q,K,A -> 2,3,4,5,6,7,8,9,10,11,12,13,14
	Spades -> 3,4,5,6,7,8,9,10,J,Q,K,A,2,joker,JOKER -> 15,16,17,18,19,20,21,22,23,24,25,26,27,28,29